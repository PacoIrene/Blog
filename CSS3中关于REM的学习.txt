

关于字体单位的使用，之前一直使用px，也没觉得有什么不好，而且，很多网站也都是使用px作为单位使用

但px作为一个绝对单位，存在其固有的缺点，因而就不得不说到另外一个单位em

em是一个相对单位，表示该元素的字体大小是其父元素字体大小的x倍

例如：

<html>
	<body>
		<h1></h1>
		<div id="first">
			<p></p>
		</div
	</body>
</html>

html {
	font-size: 62.5%;
}

h1 {
	font-size: 1.4em;
}

#first {
	font-size: 1.6em;
}

#first p {
	font-size: 1.2em;
}


来来来，我们计算一下，首先将html元素的字体设置为62.5%，表示html的字体大小是浏览器默认基本大小的62.5%，也就是16*62.5%=10px
而h1的大小是html的大小的1.4倍，也就是10*1.4=14px
同理，ID为first的div的字体大小就是10*1.6=16px
但注意，p的字体大小事多少呢，其父元素是#first，因此，其字体大小就是16*1.2=19.2px，并不是12px


啊哦

蛋疼了

不过，也简单，一个简单的除法就行了，既然我们想要12px，那12/16=0.75，因此，p的font-size设置为0.75em就可以了


略显繁琐

为何要如此设计

为何不让所有的元素都和基础的html元素作比较


好的，这就是rem的意义所在

所有使用rem的元素的字体参考值都是基础的html标签


因此，我们只要这样写就够了

html {
	font-size: 62.5%;
}

h1 {
	font-size: 1.4rem;
}

#first {
	font-size: 1.6rem;
}

#first p {
	font-size: 1.2rem;
}


没有了计算

没有了计算


等等，似乎忘记了什么


对的，浏览器兼容

还好，只有IE8以下版本包含IE8的浏览器不支持


所以对于这些奇葩，我们只能老老实实的使用传统的方法了，不过不得不说，真的没有太多必要去考虑所谓的IE8及其以下版本的IE了

这样做，意义真的不大


还有，关于这篇文章的主角，REM，不得不说，它的确很好用，而且也很好理解

我相信，它拥有光明的未来
